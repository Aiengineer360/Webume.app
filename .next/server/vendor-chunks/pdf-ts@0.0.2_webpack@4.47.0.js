"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/pdf-ts@0.0.2_webpack@4.47.0";
exports.ids = ["vendor-chunks/pdf-ts@0.0.2_webpack@4.47.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/pdf-ts@0.0.2_webpack@4.47.0/node_modules/pdf-ts/dist/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/pdf-ts@0.0.2_webpack@4.47.0/node_modules/pdf-ts/dist/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pdfToPages = exports.pdfToText = void 0;\nconst pdf_js_1 = __webpack_require__(/*! pdfjs-dist/build/pdf.js */ \"(rsc)/./node_modules/.pnpm/pdfjs-dist@1.10.100_webpack@4.47.0/node_modules/pdfjs-dist/build/pdf.js\");\nasync function pdfToText(pdf, options) {\n    const pages = await pdfToPages(pdf, options);\n    const pageSep = getStringOptionOrDefault((options || {}).pageSep, '\\n\\n');\n    return pages.map((page) => page.text).join(pageSep);\n}\nexports.pdfToText = pdfToText;\nasync function pdfToPages(pdf, options) {\n    pdf = normalizeBuffer(pdf);\n    const document = await (0, pdf_js_1.getDocument)({\n        data: pdf,\n        useWorkerFetch: false,\n        isEvalSupported: false,\n        useSystemFonts: true,\n    }).promise;\n    const numPages = document.numPages;\n    const pages = [];\n    try {\n        for (let pageNum = 1; pageNum <= numPages; pageNum++) {\n            const page = await document.getPage(pageNum);\n            try {\n                const nodeSep = getStringOptionOrDefault((options || {}).nodeSep, '\\n');\n                const text = await extractTextFromPage(page, nodeSep);\n                pages.push({ page: pageNum, text: text });\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                page.cleanup();\n            }\n        }\n    }\n    catch (error) {\n        throw error;\n    }\n    finally {\n        document.destroy();\n    }\n    return pages;\n}\nexports.pdfToPages = pdfToPages;\nasync function extractTextFromPage(page, sep) {\n    const content = await page.getTextContent();\n    return getTextItems(content.items)\n        .map((item) => item.str)\n        .join(sep);\n}\nfunction getTextItems(items) {\n    return items.filter((item) => typeof item.str === 'string');\n}\nfunction getStringOptionOrDefault(option, optionDefault) {\n    return typeof option === 'string' ? option : optionDefault;\n}\nfunction normalizeBuffer(buffer) {\n    return buffer instanceof Buffer ? new Uint8Array(buffer.buffer) : buffer;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcGRmLXRzQDAuMC4yX3dlYnBhY2tANC40Ny4wL25vZGVfbW9kdWxlcy9wZGYtdHMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxpQkFBaUI7QUFDdEMsaUJBQWlCLG1CQUFPLENBQUMsbUlBQXlCO0FBQ2xEO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscUJBQXFCO0FBQ25EO0FBQ0E7QUFDQSx1RUFBdUU7QUFDdkU7QUFDQSw2QkFBNkIsMkJBQTJCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQXJvb2pcXERvd25sb2Fkc1xcc2VsZi5zb1xcbm9kZV9tb2R1bGVzXFwucG5wbVxccGRmLXRzQDAuMC4yX3dlYnBhY2tANC40Ny4wXFxub2RlX21vZHVsZXNcXHBkZi10c1xcZGlzdFxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnBkZlRvUGFnZXMgPSBleHBvcnRzLnBkZlRvVGV4dCA9IHZvaWQgMDtcbmNvbnN0IHBkZl9qc18xID0gcmVxdWlyZShcInBkZmpzLWRpc3QvYnVpbGQvcGRmLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gcGRmVG9UZXh0KHBkZiwgb3B0aW9ucykge1xuICAgIGNvbnN0IHBhZ2VzID0gYXdhaXQgcGRmVG9QYWdlcyhwZGYsIG9wdGlvbnMpO1xuICAgIGNvbnN0IHBhZ2VTZXAgPSBnZXRTdHJpbmdPcHRpb25PckRlZmF1bHQoKG9wdGlvbnMgfHwge30pLnBhZ2VTZXAsICdcXG5cXG4nKTtcbiAgICByZXR1cm4gcGFnZXMubWFwKChwYWdlKSA9PiBwYWdlLnRleHQpLmpvaW4ocGFnZVNlcCk7XG59XG5leHBvcnRzLnBkZlRvVGV4dCA9IHBkZlRvVGV4dDtcbmFzeW5jIGZ1bmN0aW9uIHBkZlRvUGFnZXMocGRmLCBvcHRpb25zKSB7XG4gICAgcGRmID0gbm9ybWFsaXplQnVmZmVyKHBkZik7XG4gICAgY29uc3QgZG9jdW1lbnQgPSBhd2FpdCAoMCwgcGRmX2pzXzEuZ2V0RG9jdW1lbnQpKHtcbiAgICAgICAgZGF0YTogcGRmLFxuICAgICAgICB1c2VXb3JrZXJGZXRjaDogZmFsc2UsXG4gICAgICAgIGlzRXZhbFN1cHBvcnRlZDogZmFsc2UsXG4gICAgICAgIHVzZVN5c3RlbUZvbnRzOiB0cnVlLFxuICAgIH0pLnByb21pc2U7XG4gICAgY29uc3QgbnVtUGFnZXMgPSBkb2N1bWVudC5udW1QYWdlcztcbiAgICBjb25zdCBwYWdlcyA9IFtdO1xuICAgIHRyeSB7XG4gICAgICAgIGZvciAobGV0IHBhZ2VOdW0gPSAxOyBwYWdlTnVtIDw9IG51bVBhZ2VzOyBwYWdlTnVtKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBkb2N1bWVudC5nZXRQYWdlKHBhZ2VOdW0pO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBub2RlU2VwID0gZ2V0U3RyaW5nT3B0aW9uT3JEZWZhdWx0KChvcHRpb25zIHx8IHt9KS5ub2RlU2VwLCAnXFxuJyk7XG4gICAgICAgICAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IGV4dHJhY3RUZXh0RnJvbVBhZ2UocGFnZSwgbm9kZVNlcCk7XG4gICAgICAgICAgICAgICAgcGFnZXMucHVzaCh7IHBhZ2U6IHBhZ2VOdW0sIHRleHQ6IHRleHQgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgICAgIHBhZ2UuY2xlYW51cCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIGRvY3VtZW50LmRlc3Ryb3koKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhZ2VzO1xufVxuZXhwb3J0cy5wZGZUb1BhZ2VzID0gcGRmVG9QYWdlcztcbmFzeW5jIGZ1bmN0aW9uIGV4dHJhY3RUZXh0RnJvbVBhZ2UocGFnZSwgc2VwKSB7XG4gICAgY29uc3QgY29udGVudCA9IGF3YWl0IHBhZ2UuZ2V0VGV4dENvbnRlbnQoKTtcbiAgICByZXR1cm4gZ2V0VGV4dEl0ZW1zKGNvbnRlbnQuaXRlbXMpXG4gICAgICAgIC5tYXAoKGl0ZW0pID0+IGl0ZW0uc3RyKVxuICAgICAgICAuam9pbihzZXApO1xufVxuZnVuY3Rpb24gZ2V0VGV4dEl0ZW1zKGl0ZW1zKSB7XG4gICAgcmV0dXJuIGl0ZW1zLmZpbHRlcigoaXRlbSkgPT4gdHlwZW9mIGl0ZW0uc3RyID09PSAnc3RyaW5nJyk7XG59XG5mdW5jdGlvbiBnZXRTdHJpbmdPcHRpb25PckRlZmF1bHQob3B0aW9uLCBvcHRpb25EZWZhdWx0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnID8gb3B0aW9uIDogb3B0aW9uRGVmYXVsdDtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZUJ1ZmZlcihidWZmZXIpIHtcbiAgICByZXR1cm4gYnVmZmVyIGluc3RhbmNlb2YgQnVmZmVyID8gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyLmJ1ZmZlcikgOiBidWZmZXI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/pdf-ts@0.0.2_webpack@4.47.0/node_modules/pdf-ts/dist/index.js\n");

/***/ })

};
;